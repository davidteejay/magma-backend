{
  "swagger": "2.0",
  "info": {
    "title": "Barefoot Normad API Documentation",
    "version": "1.0.0",
    "description": "Documentation to test the endpoints for the Barefoot Normad API"
  },
  "host": "localhost:5000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "auth",
      "description": "Create account and login"
    },
    {
      "name": "request",
      "description": "Make travel requests"
    }
  ],
  "schemes": ["https", "http"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["auth"],
        "summary": "Creates a new user",
        "description": "This endpoint registers a new user",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information needed to create a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Signup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "409": {
            "description": "email already in use"
          },
          "400": {
            "description": "email is required, and should follow this format: myemail@domain.com"
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "tags": ["auth"],
        "summary": "Signs in a verified user",
        "description": "This endpoint signs in a verified user",
        "operationId": "loginUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information needed for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Signin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful.",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "404": {
            "description": "Your email cannot be found in our database."
          },
          "401": {
            "description": "Your password is incorrect."
          }
        }
      }
    },
    "/users/reset": {
      "post": {
        "tags": ["auth"],
        "summary": "Sends a registered user a password reset link",
        "description": "This endpoint registers sends a registered user a link to reset their password",
        "operationId": "resetPassword",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information needed send a user a password reset link",
            "required": true,
            "schema": {
              "$ref": "#/definitions/passwordReset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/passwordResetResponse"
            }
          }
        }
      }
    },
    "/users/reset/:token": {
      "patch": {
        "tags": ["auth"],
        "summary": "Updates a registered user password",
        "description": "This endpoint updates the user password in the database",
        "operationId": "updatePassword",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Information needed to update the user password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/updatePasswordResponse"
            }
          }
        }
      }
    },
    "/requests": {
      "post": {
        "tags": ["request"],
        "summary": "Book a travel request",
        "description": "This endpoint books a one-way trip request",
        "operationId": "bookTrip",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "data needed to book a trip",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookTrip"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "message created successfully",
            "schema": {
              "$ref": "#/definitions/RequestResponse"
            }
          },
          "400": {
            "description": "departureDate is required"
          },
          "409": {
            "description": "you already have a trip booked around this period, you may choose to cancel and make a multi-city request"
          }
        }
      }
    }
  },
  "definitions": {
    "PasswordReset": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "UpdatePassword": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "UpdatePasswordResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "data": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "date"
          },
          "updatedAt": {
            "type": "date"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PasswordResetResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Signin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "BookTrip": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["one-way", "return"]
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "returnDate": {
          "type": "string",
          "format": "date"
        },
        "reason": {
          "type": "string"
        },
        "accommodation": {
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "items": {
            "properties": {
              "token": {
                "type": "string"
              },
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "RequestResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "items": {
            "properties": {
              "origin": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": ["one-way", "return"]
              },
              "departureDate": {
                "type": "string",
                "format": "date"
              },
              "returnDate": {
                "type": "string",
                "format": "date"
              },
              "reason": {
                "type": "string"
              },
              "accommodation": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": ["open", "closed"]
              }
            }
          }
        }
      }
    }
  }
}
